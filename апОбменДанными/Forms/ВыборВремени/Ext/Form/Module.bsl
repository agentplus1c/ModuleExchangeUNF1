
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	СтррКонтекст = Новый Структура("Ключ");
	ТекОбъект = РеквизитФормыВЗначение("Объект");		
	ТекОбъект.КонтекстФормыИнициализировать(СтррКонтекст, Параметры);
	
	Если Не Параметры.Свойство("ВремяНачала") Или Не Параметры.Свойство("ВремяОкончания") Или Не Параметры.Свойство("Ключ") Тогда
		ТекстСообщения = СтрШаблон_(НСтр("ru='Форма ""%1"" - не получены все параметры: Ключ, ВремяНачала, ВремяОкончания.';uk='Форма ""%1"" - не отримані всі параметри: Ключ, ВремяНачала, ВремяОкончания.'"),
										ЭтаФорма.Заголовок);
	КонецЕсли; 
	
	ВремяНачала 	= Параметры.ВремяНачала;
	ВремяОкончания 	= Параметры.ВремяОкончания;
	
КонецПроцедуры

// Подставляет параметры в строку. Максимально возможное число параметров - 5.
// Параметры в строке задаются как %<номер параметра>. Нумерация параметров начинается с единицы.
//
// Параметры:
//  СтрокаПодстановки  - Строка - шаблон строки с параметрами (вхождениями вида "%ИмяПараметра");
//  Параметр<n>        - Строка - подставляемый параметр.
//
// Возвращаемое значение:
//  Строка   - текстовая строка с подставленными параметрами.
//
Функция СтрШаблон_(СтрокаПодстановки,
	Параметр1, Параметр2 = Неопределено, Параметр3 = Неопределено, Параметр4 = Неопределено, Параметр5 = Неопределено)
	
	Результат = СтрЗаменить(СтрокаПодстановки, "%1", Параметр1);
	Результат = СтрЗаменить(Результат, "%2", Параметр2);
	Результат = СтрЗаменить(Результат, "%3", Параметр3);
	Результат = СтрЗаменить(Результат, "%4", Параметр4);
	Результат = СтрЗаменить(Результат, "%5", Параметр5);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	Если ВремяОкончания < ВремяНачала Тогда
		ПоказатьПредупреждение(Неопределено, НСтр("ru='Время указано неверно';uk='Час вказано невірно'"));
	Иначе
		СтррПараметры = Новый Структура("КодВозвратаДиалога,Ключ,ВремяНачала,ВремяОкончания", 
			КодВозвратаДиалога.ОК, СтррКонтекст.Ключ, ВремяНачала, ВремяОкончания);
		Закрыть(СтррПараметры);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ВремяНачалаПриИзменении(Элемент)
	
	Если ВремяОкончания < ВремяНачала Тогда
		ВремяОкончания = ВремяНачала;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВремяНачалаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	Если ВремяОкончания < ВремяНачала Тогда
		ВремяОкончания = ВремяНачала;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВремяОкончанияПриИзменении(Элемент)
	
	Если ВремяОкончания < ВремяНачала Тогда
		ВремяНачала = ВремяОкончания;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВремяОкончанияРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	Если ВремяОкончания < ВремяНачала Тогда
		ВремяНачала = ВремяОкончания;
	КонецЕсли;

КонецПроцедуры

// ОбработчикиСобытийЭлементовФормы
#КонецОбласти
