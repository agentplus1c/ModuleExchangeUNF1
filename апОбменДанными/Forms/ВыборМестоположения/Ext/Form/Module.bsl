
#Область ГлобальныеПеременные

&НаКлиенте
Перем МодульКарты;  // общий клиентский модуль работы с картами

// ГлобальныеПеременные
#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТекОбъект = РеквизитФормыВЗначение("Объект");		
	ТекОбъект.КонтекстФормыИнициализировать(СтррКонтекст, Параметры);
	Если Параметры.Свойство("Местоположение") Тогда
		Если ТипЗнч(Параметры.Местоположение) = Тип("Структура") Тогда
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры.Местоположение);
		КонецЕсли; 
	Иначе
		ВызватьИсключение(НСтр("ru = 'Форма ""ВыборМестоположения"": ожидается свойство Параметры.Местоположение типа ""Структура""!'; uk = 'Форма ""ВыборМестоположения"": очікується властивість Параметры.Местоположение типу ""Структура""!'"));
	КонецЕсли;
	
	// +АгентПлюс 2018-11-21 Виктор
	ВерсияКонфигурации = ТекОбъект.ВерсияКонфигурации();
	Если ВерсияКонфигурации.Конфигурация = "УНФ_UA" Тогда
		Элементы.country_ru.Заголовок = НСтр("ru='Страна (ua)'; uk ='Країна (ua)'");
		Элементы.region_ru.Заголовок = НСтр("ru='Регион (ua)'; uk ='Регіон (ua)'");
		Элементы.city_ru.Заголовок = НСтр("ru='Город (ua)'; uk ='Місто (ua)'");
	КонецЕсли;	
	// -АгентПлюс 2018-11-21 Виктор 	

КонецПроцедуры

// ОбработчикиСобытийФормы
#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаАвтоопределение(Команда)

	Если МодульКарты = Неопределено Тогда
		МодульКарты	= ПолучитьФорму(СтррКонтекст.ПутьКФорме + "МодульКарты", СтррКонтекст, ЭтаФорма, "АгентПлюсМодульКартыКлиент");
	КонецЕсли; 
	
	СтррРезультат = МодульКарты.МестоположениеПользователяПолучить();
	Если СтррРезультат.Свойство("error") Тогда
		ПоказатьПредупреждение(Неопределено, НСтр("ru='Не удалось определить местоположение по причине:';uk='Неможливо визначити місце розташування через:'")  + Символы.ПС + СтррРезультат.error);
	Иначе
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, СтррРезультат);		
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура КомандаОК(Команда)
	
	СтррРезультат = Новый Структура("city_en,city_ru,country_en,country_ru,region_en,region_ru");
	ЗаполнитьЗначенияСвойств(СтррРезультат, ЭтотОбъект);
	
	Закрыть(СтррРезультат);
	
КонецПроцедуры

// ОбработчикиКомандФормы
#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ЭлементПриИзмененииRu(Элемент)
	
	Если Не ПустаяСтрока(ЭтотОбъект[Элемент.Имя]) Тогда
		Значение = СтрокаЛатиницей(ЭтотОбъект[Элемент.Имя]);
		ЭтотОбъект[СтрЗаменить(Элемент.Имя, "ru", "en")] = СтрокаЛатиницей(Значение);
	КонецЕсли; 
	
КонецПроцедуры

// ОбработчикиСобытийЭлементовФормы
#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

// Преобразует исходную строку в транслит.
&НаКлиентеНаСервереБезКонтекста 
Функция СтрокаЛатиницей(Знач Строка)
	
	Результат = "";
	
	Буквы = "аa,бb,вv,гg,дd,еe,ёe,жzh,зz,иi,йy,кk,лl,мm,нn,оo,пp,рr,сs,тt,уu,фf,хkh,цts,чch,шsh,щshch,ъ,ыy,ь,эe,юyu,яya,";
	
	ПредыдущийСимвол = "";
	Для Позиция = 1 По СтрДлина(Строка) Цикл
		Символ = Сред(Строка, Позиция, 1);
		Если КодСимвола(Символ) < 128 Тогда
			СимволЛатиницей = Символ;
		Иначе
			ПозНачала = Найти(Буквы, НРег(Символ)); // Поиск соответствия без учета регистра.			
			Если ПозНачала = 0 Тогда
				// Другие символы остаются "как есть".
				СимволЛатиницей = Символ;
			Иначе
				ПозНачала = ПозНачала + 1;
				ПозКонца = ПозНачала;
				Пока Сред(Буквы, ПозКонца, 1) <> "," Цикл
					ПозКонца = ПозКонца + 1;
				КонецЦикла;
				СимволЛатиницей = Сред(Буквы, ПозНачала, ПозКонца - ПозНачала);
				Если Символ = ВРег(Символ) Тогда
					СимволЛатиницей = ВРег(СимволЛатиницей); // восстанавливаем регистр
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Результат = Результат + СимволЛатиницей;
		ПредыдущийСимвол = СимволЛатиницей;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// СлужебныеПроцедурыИФункции
#КонецОбласти 
